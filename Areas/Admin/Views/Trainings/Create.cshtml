@model Website.Models.Training

@{
    ViewBag.Title = "الدورات  التدريبية";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Create" , "Trainings", FormMethod.Post , new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TrainingTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().ComboBox()
          .Name("TrainingTypeId")
          .Filter("contains")
          .Placeholder("اختار نوع الدورات التدريبية")
          .DataTextField("Text")
          .DataValueField("Value")
          .BindTo(ViewBag.trainingType as SelectList)
          .Suggest(true)
          .HtmlAttributes(new { style = "width:30%;" })

                )
                @Html.ValidationMessageFor(model => model.TrainingTypeId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NameAr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameAr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameAr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NameEn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameEn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameEn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DescriptionAr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.DescriptionAr, htmlAttributes : new { @class = "form-control" , rows = "10" })
                @Html.ValidationMessageFor(model => model.DescriptionAr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DescriptionEn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.DescriptionEn, htmlAttributes: new { @class = "form-control", rows = "10" })
                @Html.ValidationMessageFor(model => model.DescriptionEn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HourlyDuration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HourlyDuration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HourlyDuration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LecturesCount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LecturesCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LecturesCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DetailsAr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Kendo().EditorFor(model => model.DetailsAr).Encode(false).Tools(t=> t.FontColor().BackColor().CleanFormatting().ViewHtml())
                @Html.ValidationMessageFor(model => model.DetailsAr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DetailsEn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Kendo().EditorFor(model => model.DetailsEn).Encode(false).Tools(t=> t.FontColor().BackColor().CleanFormatting().ViewHtml())
                @Html.ValidationMessageFor(model => model.DetailsEn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TargetAr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Kendo().EditorFor(model => model.TargetAr).Encode(false).Tools(t=> t.FontColor().BackColor().CleanFormatting().ViewHtml())
                @Html.ValidationMessageFor(model => model.TargetAr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TargetEn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Kendo().EditorFor(model => model.TargetEn).Encode(false).Tools(t=> t.FontColor().BackColor().CleanFormatting().ViewHtml())
                @Html.ValidationMessageFor(model => model.TargetEn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContentDetailsAr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Kendo().EditorFor(model => model.ContentDetailsAr).Encode(false).Tools(t=> t.FontColor().BackColor().CleanFormatting().ViewHtml())
                @Html.ValidationMessageFor(model => model.ContentDetailsAr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContentDetailsEn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Kendo().EditorFor(model => model.ContentDetailsEn).Encode(false).Tools(t=> t.FontColor().BackColor().CleanFormatting().ViewHtml())
                @Html.ValidationMessageFor(model => model.ContentDetailsEn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CoursePersonsAr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Kendo().EditorFor(model => model.CoursePersonsAr).Encode(false).Tools(t=> t.FontColor().BackColor().CleanFormatting().ViewHtml())
                @Html.ValidationMessageFor(model => model.CoursePersonsAr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CoursePersonsEn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Kendo().EditorFor(model => model.CoursePersonsEn).Encode(false).Tools(t=> t.FontColor().BackColor().CleanFormatting().ViewHtml())
                @Html.ValidationMessageFor(model => model.CoursePersonsEn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TrainingDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Kendo().DatePicker().Name("_TrainingDate").Format("dd-MM-yyyy").HtmlAttributes(new { style = "width:30%" })
                @Html.ValidationMessageFor(model => model.TrainingDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input name="_img" class="custom-file-input" type="file">
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="حفظ" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("عودة الى الدورات  التدريبية", "Index")
</div>
